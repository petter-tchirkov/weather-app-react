{"ast":null,"code":"var _jsxFileName = \"/Users/pettertchirkov/Documents/GitHub/shortio/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Info from './components/info';\nimport Form from './components/form';\nimport Weather from './components/weather';\nconst API_KEY = `7250b4aa5d0ccdb8e2179a7a8f4185ec`;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: [],\n      city: undefined,\n      country: undefined,\n      maxTemp: undefined,\n      minTemp: undefined,\n      error: undefined,\n      lon: undefined,\n      lat: undefined,\n      weather: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`);\n        const data = await api_url.json();\n        console.log(data);\n        this.setState({\n          temp: [],\n          city: data.city.name,\n          country: data.city.country,\n          error: undefined\n        });\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          maxTemp: undefined,\n          minTemp: undefined,\n          error: 'Please enter the city',\n          lon: undefined,\n          lat: undefined,\n          weather: undefined\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Form, {\n      weatherMethod: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      maxTemp: this.state.maxTemp,\n      minTemp: this.state.minTemp,\n      lat: this.state.lat,\n      lon: this.state.lon,\n      weather: this.state.weather,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pettertchirkov/Documents/GitHub/shortio/src/App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","state","temp","city","undefined","country","maxTemp","minTemp","error","lon","lat","weather","getWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","console","log","setState","name","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Info from './components/info'\nimport Form from './components/form'\nimport Weather from './components/weather'\n\nconst API_KEY = `7250b4aa5d0ccdb8e2179a7a8f4185ec`;\nclass App extends React.Component {\n\n  state = {\n    temp: [],\n    city: undefined,\n    country: undefined,\n    maxTemp: undefined,\n    minTemp: undefined,\n    error: undefined,\n    lon: undefined,\n    lat: undefined,\n    weather: undefined\n  }\n\n  getWeather = async (e) => {\n\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n\n\n    if (city) {\n      const api_url = await\n        fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n      console.log(data);\n\n      this.setState({\n        temp: [],\n        city: data.city.name,\n        country: data.city.country,\n        error: undefined\n      });\n    } else {\n      this.setState({\n        temp: undefined,\n        city: undefined,\n        country: undefined,\n        maxTemp: undefined,\n        minTemp: undefined,\n        error: 'Please enter the city',\n        lon: undefined,\n        lat: undefined,\n        weather: undefined\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Info />\n        <Form weatherMethod={this.getWeather} />\n        <Weather\n          temp={this.state.temp}\n          city={this.state.city}\n          country={this.state.country}\n          maxTemp={this.state.maxTemp}\n          minTemp={this.state.minTemp}\n          lat={this.state.lat}\n          lon={this.state.lon}\n          weather={this.state.weather}\n          error={this.state.error}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}