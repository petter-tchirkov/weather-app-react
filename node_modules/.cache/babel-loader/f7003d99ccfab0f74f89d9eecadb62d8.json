{"ast":null,"code":"var _jsxFileName = \"/Users/pettertchirkov/Documents/GitHub/shortio/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Info from './components/info';\nimport Form from './components/form';\nimport Weather from './components/weather';\nconst API_KEY = `7250b4aa5d0ccdb8e2179a7a8f4185ec`;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      maxTemp: undefined,\n      minTemp: undefined,\n      error: undefined,\n      lon: undefined,\n      lat: undefined,\n      weather: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`);\n        const data = await api_url.json();\n        console.log(data);\n        this.setState({\n          temp: data.list[(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)],\n          city: data.city.name,\n          country: data.city.country,\n          error: undefined\n        });\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          maxTemp: undefined,\n          minTemp: undefined,\n          error: 'Please enter the city',\n          lon: undefined,\n          lat: undefined,\n          weather: undefined\n        });\n      }\n\n      console.log(this.state.temp);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Form, {\n      weatherMethod: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      maxTemp: this.state.maxTemp,\n      minTemp: this.state.minTemp,\n      lat: this.state.lat,\n      lon: this.state.lon,\n      weather: this.state.weather,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pettertchirkov/Documents/GitHub/shortio/src/App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","state","temp","undefined","city","country","maxTemp","minTemp","error","lon","lat","weather","getWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","console","log","setState","list","name","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Info from './components/info'\nimport Form from './components/form'\nimport Weather from './components/weather'\n\nconst API_KEY = `7250b4aa5d0ccdb8e2179a7a8f4185ec`;\nclass App extends React.Component {\n\n  state = {\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    maxTemp: undefined,\n    minTemp: undefined,\n    error: undefined,\n    lon: undefined,\n    lat: undefined,\n    weather: undefined\n  }\n\n  getWeather = async (e) => {\n\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n\n\n    if (city) {\n      const api_url = await\n        fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n      console.log(data);\n\n\n      this.setState({\n        temp: data.list[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        city: data.city.name,\n        country: data.city.country,\n        error: undefined\n      });\n    } else {\n      this.setState({\n        temp: undefined,\n        city: undefined,\n        country: undefined,\n        maxTemp: undefined,\n        minTemp: undefined,\n        error: 'Please enter the city',\n        lon: undefined,\n        lat: undefined,\n        weather: undefined\n      });\n    }\n    console.log(this.state.temp)\n  }\n\n  render() {\n    return (\n      <div>\n        <Info />\n        <Form weatherMethod={this.getWeather} />\n        <Weather\n          temp={this.state.temp}\n          city={this.state.city}\n          country={this.state.country}\n          maxTemp={this.state.maxTemp}\n          minTemp={this.state.minTemp}\n          lat={this.state.lat}\n          lon={this.state.lon}\n          weather={this.state.weather}\n          error={this.state.error}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}